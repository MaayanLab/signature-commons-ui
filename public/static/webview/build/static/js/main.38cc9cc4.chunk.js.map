{"version":3,"sources":["react_scatter_board/texture.js","react_scatter_board/utils.js","react_scatter_board/ScatterData.js","react_scatter_board/ScatterPlot.jsx","react_scatter_board/ScatterWidgets.jsx","react_scatter_board/ScatterBoard.jsx","react_scatter_board/Lazy.jsx","utils.js","App.js","reportWebVitals.js","index.js"],"names":["imageData","circle","cross","diamond","square","Texture","symbolType","this","image","Image","src","texture","THREE","needsUpdate","symbolTypes","Object","keys","RARE","getDataType","value","type","Number","isInteger","orderArray","arr","indices","orderedArr","Array","length","i","encodeRareCategories","k","counts","_","countBy","sortBy","pairs","tuple","frequentCategories","map","slice","indexOf","binValues","nbins","extent","d3","min","parseFloat","max","interval","domain","range","labels","toFixed","label","push","binValues2","ScatterDataSubset","data","n","getIndicesAndPositions","positions","Uint32Array","Float32Array","x","y","z","metaKey","record","ScatterData","metas","parse","xyz","key","values","o","nUnique","Set","utils","name","index","labelKeys","labelKey","dataSubsets","groupBy","mapObject","records","list","binnedValues","pluck","obj","Math","floor","filter","edge","rec","colorOptions","meta","shapeOptions","allLabels","getAttr","options","findWhere","dtype","uniqueCats","nUniqueCats","size","from","idx","greyIdx","elem","greyIdx2","colorExtent","minScore","maxScore","colorScale","d3Scale","shapeLabels","symbols","t","scatterDataSubsets","shapeScale","binBy","pValueDomain","binBy2","PointsGeometry","args","model","geometry","createGeometry","setIndex","setAttribute","userData","computeBoundingSphere","Scatter3dView","props","is3d","state","isLoading","isLoaded","url","WIDTH","width","HEIGHT","height","DPR","colorKey","shapeKey","pointSize","onMouseMove","bind","onMouseDown","onMouseUp","onClick","setState","fetch","then","response","ok","json","Error","makeMaterial","setUpStage","shapeBy","prevProps","prevState","snapshot","startAnimate","animateId","stopAnimate","ref","mount","aspectRatio","scene","id","uuid","renderer","setClearColor","setPixelRatio","setSize","ORTHO_CAMERA_FRUSTUM_HALF_EXTENT","left","right","bottom","top","camera","position","domElement","appendChild","controls","OrbitControls","enableZoom","enableDamping","dampingFactor","screenSpacePanning","autoRotate","autoRotateSpeed","enableRotate","mouseButtons","LEFT","RIGHT","MIDDLE","DOLLY","addEventListener","mouse","updated","e","mouseMoved","undefined","nativeEvent","assign","offsetX","offsetY","trueIdx","points","getPoint","datum","materials","textureResult","load","material","vertexColors","sizeAttenuation","alphaTest","transparent","opacity","children","child","remove","calculateShapeScale","geometries","mergedGeometry","BufferGeometryUtils","mergeBufferGeometries","g","reduce","arr1","arr2","concat","getLabels","groupSizes","count","cumsums","a","unshift","addGroup","clearScene","add","setColors","closestPoint","resetColors","textLabel","document","getElementById","attributes","color","array","pointPosition","textCanvas","makeTextCanvas","rotation","fontsize","fontface","textColor","r","b","onMouseOver","message","euler","parameters","hasOwnProperty","lineHeight","canvas","createElement","context","getContext","font","textBaseline","textAlign","fillStyle","point","applyEuler","pv","copy","project","coords","lines","split","fillText","style","pointerEvents","colors","toArray","animate","update","renderScatter","render","window","requestAnimationFrame","cancelAnimationFrame","query","removeHighlightedPoints","matchedData","dataSubset","highlightCould","createHighlightCloud","geometryHighlight","highlightPoints","getObjectByName","closestDist","point3","point2","pointIndex","set","dist","distanceToSquared","zoom","React","Component","Legend","setUpDOMs","displayColorLegend","displayShapeLegend","el","append","attr","zIndex","overflow","legendShape","legend","legendSymbol","scale","orient","title","select","call","legendColor","shapeWidth","cells","labelFormat","SelectDropdown","defaultValue","handleChange","onChange","styles","container","onSelectChange","SearchSelectize","searchStr","searched","handleClear","defaultInputValue","placeholder","className","marginTop","onInputChange","onClearBtnClicked","ScatterBoard","searchKeys","handleColorKeyChange","handleShapeKeyChange","handleSearchInputChange","handleClearBtnClick","calculateColorScale","searchOptions","getColorOptions","getShapeOptions","getSearchOptions","padding","devicePixelRatio","scatter3dView","valueObj","highlightQuery","get_dtype","v","read_tsv","text","rows","line","replace","header","shift","row_0","row","rowdict","DirectionRenderer","App","useState","plotData","setPlotData","tableData","setTableData","gridApi","setGridApi","setGridColumnApi","useEffect","_data","sid","pid","cluster","visit","href","evt","setFilterModel","getFilterModel","filterType","onGridReady","params","api","columnApi","autoSizeAllColumns","adjusted_pvalue","applyColumnState","colId","sort","defaultState","rowData","h","ind","field","sortable","cellStyle","resizable","valueFormatter","toPrecision","cellRenderer","comparator","valueA","valueB","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.38cc9cc4.chunk.js","sourcesContent":["import * as THREE from 'three'\n\n// generated according to https://stackoverflow.com/questions/6150289/how-to-convert-image-into-base64-string-using-javascript\nconst imageData = {\n  circle:\n    ',iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAACtElEQVRYR+2Wz2sTQRTH5+2mNu2QbJY1Ymuym9nkInjwR/HgQRQVEf8Db9KDB0+K+CfovT0IIuKf4EVBUfSioGD1KJjdndmEEJrY1mQDadjdkZFWSkmT3aQShO5133vfz7z9znsLaMIPTFgfHQD8nx2wLOs6ABQ45/qWhxhCiBWLxRdxPRW5A/V6HXe73UdhGN7AGNclSTqWSCT+6Pm+j8IwrHqedxQAnhFCbgNALwpMJADbts8DwHNVVdV0Oo0A+qdxzlGr1ULr6+utIAiulUqlj8MghgLUarUF3/ff5vP59LBiO99Xq9W2LMsX5ufnVwblDQQol8snpqamPui6Hkt8W5Ax1uacnyWEfN8LYiAApbSZy+U0WZbjHP5vbBAEyHXdhmmaR2IDUErvzs7OPshms9MjqW8lNRqNzU6nc58QstSvzp4dYIx91TTtJMZ4HH3U6XTQ2traF13XF2IBWJYVEkJgL8dHpRI3g1IamqbZ9zv27YBt21eSyeTrubm5qDoD42q1Gur1ehcJIe93B/YFoJQ+yWQyi4qi7AvAxsaGmA+PDcO4FRlAUZTFTCYzGQDLsi7NzMy8mdgnEMfeLxOGYYgYY/FMKAAYYyuapp2a2DV0HOcOxvjhuINodXW11+127xmGsRxrDohgx3Ga+Xx+5FEs1nSlUmmappmNPYpFAqX0OELok2EYqVGug+u6nu/7p4vF4o+RALa8cAYh9E7X9VgQruv+Eus4l8t9G3kdbyeWy+Vzsiy/VFVVSaVSSJKkvjWF49vttpj9bYTQZdM0Pw/r3NAfku0CnPNDtm0vAcBNjHETAIQ3psWu8H1/k3P+0/O8w5IkPS0UCuKXLBwmLt5HBthZzHGcq0EQFADA4JwLIVeWZUYIeRVFdGfMSABxRcb2wH4KRlpG/1LwAGB3B34DBWQWMG24djEAAAAASUVORK5CYII=',\n  cross:\n    ',iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAA50lEQVRYR+2XPQ6DMAyF8QZbfIYchN4spRer6D1yBcyWbKmylZI4WB0oklmdn8cnvfcAupMfOPn+7noCvPeOo2atnSRURQTy5cMwuL7vi/tijCmE8LDW3o+KEAtARIeIxX1ElIhIBSiBixNo+HxExBvngmVZXgDwrNnwOyc2dmr5PB+KiKzFiag6L+XETgDn86PhUltXygkVoAT+jwBXt7/aMITQxRinz7re1ar3vtrlADAaY3IYVet4Xdc5pTQzQbQ5X78HlIASEBPgcqLk81aDigTkw7icyHPJP0FeLxbQeiPpXAW8AUg5MTAvQNb8AAAAAElFTkSuQmCC',\n  diamond:\n    ',iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAACaElEQVRYR9WXy4vTUBTG05DW2E7sI6XPlOTeUkTcqeB2QHApIrgTXIr+AbrVlW5cKbidlStFXKsrl+IsB4T23tiGtolp2pLbTh9JkQwpjNppmkyHYFaB3POdX777OidCBXwQQhdpmv5GUdRisVhchxD+CCIVCRLkxGCMv+fz+SvOu6qq+wCAq0G0AgHU6/Xb8Xh8r1gsJp2knU5nOJ1O7wMAPvqFCASAMTYEQUgzDHOUz7IsqtVq9SGEmTMHwBg/5TjuCc/z7PFkvV5vYprmCwDAMz8QvhzQNG2HEKIDAM6tSoIxnrEsmy6VSuNNIXwBYIzf8zx/h+O4lfqmaVKGYbyTJOnu1gEajca1aDT6pVKpXFgnriiKadv2riRJ+5tAbOwAxvigUChcYtk/pv6fHJPJhOp2uwcAgMtbA0AI3UskEm9yudzOJqKqqpLRaPSgWq2+9Rq/kQMIoUNRFFmapr30jr7btk01m80xhDDhFeAJgBB6mUqlHqbT6fNeYse/9/v9w8Fg8BpC+Hhd3FoAjHEhEok0RFGM+0m+HCvL8tiyLKlWq/06KX4tgCzLn7PZ7I1EwtPJlfqEEErX9U8AgJu+ATDGuwzDfBAEIRXk75cxiqIM5vP5LQjh11U6JzqAEGqWy+VKLBY7TX5qNptR7Xb7JwBA+r8AQp8Cx65QF6EDEPo2dCCcgyiZTD7KZDLrL4G/VphhGJPhcPjqVAfRUjPUo9h1wddlpGkaIYRs7zJy10N417EDEHpB4roQXknmAIRelLourCzLdV2fEkKen2lZvtyWoTYmDkTorZk7FeE1p+7htJX2/DfV7WYwLPkGlAAAAABJRU5ErkJggg==',\n  square:\n    ',iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAp0lEQVRYR+2WMQ4CIRBFWQoyFQ03YG7naqPHsNEY9XLADSjooFrD1mJixmRj8qlh/ssbij+pjc+0cb4CAAx8NBBCOGitjfCjVu/9fTRjCNDDiehKRKI1tdaWWuuemR/vIIbDU0ona+3ZOScCyDkvpZQjM18AAAMwAAMwAAMw8HcGZmPM7UeFZGbm51cG+uUY404pJa1kbRTeM0RtR9gV1+cAgIHNDbwAdNviIRMkcw0AAAAASUVORK5CYII=',\n  'triangle-down':\n    ',iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAC2klEQVRYR+2WPWzTQBiGnR/iFrs4pFadpolyn09VJZAYOjDQCYmFiYVKIDHQgRWxMCAhIaSuHWCEAXWknZAQG1IHJAbEAggGcpc4bVK3Sdu0SUwSXBu5clHTpk7sJC0D3uLcfe9z730/9jGn/PhOWZ/5dwAURblgGEbiJBzx+XxZhNAPS+uvA5RSJRQK8f0GME3Tp+v6NgBAEwAh5DbHcS8lSeL6CbG2tlbVNG1GluXFJgDrRyaT+SZJ0sWBgYG+MNRqNUZV1a8AcGlfoCkJM5nMZCAQWIrH40P9IFheXq7ouj4ly/KXlgC2C4uRSOTm0FBvGXZ2dpjNzc3XAHDr4OGOlGE+nz9bq9W2ACDUSxcopbphGPz4+HjdEcD6M51OP+F5/pEoimwvIIrFYr1cLs/Ksjx7ON6xjSidTm/E4/FIMBjsikHXdWZlZWUDAMRWgZwAbrAsOz86Oip0Q6Cq6ramaXcwxm9dAdhX8VmSpMnBwUFPDJqmMcVi8VMymbx8XADHWUApnfD7/VYATyWRzWatspvEGP/0BGBtUhRlXhCEaUEQXNlQKpV+lUqlBQC462RfR9OQEGLKsuzqGiilDMa4bfy2C+zm9JDjuMeiKJ7rhKJQKJQ1TXuKEJprt74jADshV2OxWDQUcu5PjUaDyefzqwAQayd+ZBg5bSCEXGNZdmFsbOy807pcLrdVr9enMcbvewpgJ+SH4eHhKY5rPbGr1SpTKBSWAOBqJ+KuHLAWp1KpRDAY/J5MJlt+uCiKUg0EAhOJRCLXFwA7F56Fw+F74XC4qSztsnsBAA86FXftwH5gQkgDIXTG7/fvvTIMw/qY+Y0xdj1BO66Cg6cihMzwPP98ZGRk7yrW19crlUrlPsb4lZvTe3bA7g0kGo3udSdVVSlCCLsV7woglUpdYVn2nRVkd3f3OkLo44kC2GX5xjRNKx+mvYh35YBXwcP7PCVhr8T/O2A58AfGZw8wtSahoQAAAABJRU5ErkJggg==',\n  'triangle-up':\n    ',iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAC3UlEQVRYR+2VP2gTURzHLyG5tOnFXD0uJsTj3u9dB4s4iIIOIk5uDnUQQdChuApOBScFh4KDg4uDOgkKKoKO4iAI4lIciiD03rtoSnOJTbzcJTmS651EraTm312a2qVvvd/v+/2873vvdyFml1dol/2ZPYBtJUApfdk+QgCYG/UoRwZQVfVULBZ77Xke02w2zymK8n4UiJEBKKU0k8mgtmmhUKAIIfzfAAgh8xzH3RVFMdE2LRaLZq1Wu44xfhgUYqQEVFVtAUAkFPrd7rouo2maoyhKdMcBCCH3eJ6fn56enuw0q1QqjWq1+gAhdC0IRKAECCFyOBxelmWZ62WSy+WsjY2Nw4qifPULEQhA07QPoiiejMfjPfVrtRpTKpXeAcCZsQMQQs6yLPskm83uHyS+urpabjabFzHGb/xA+E6AUlrIZrMHotHB96zVajH5fF7HGKfHBkApXZiamrohiuI+P6KlUqlar9dvI4TuDKsfmoDneWFCSAtjHB4m1vmdEOIpijK0ZyiApmmPeZ6fSyaTvW9eHyrDMOqGYTyXZfnKIPCBAJqmzTIM81GW5V8TL+jK5XKG67onMMZf+vUOA1hKpVJHJye3zBzfHI1Gg9F1fQkAjgUGWFlZmYvH448ymQzv27FH4drammHb9mWM8ateOn0TIIRUJEniI5HIdvwZx3Haz7IMAIJvAErpzUQisSAIwsS23P80r6+v26ZpLgLArX/1uhIoFoucZVnfASA2DvNNjfZTZlk2KUlSo1O3C4BS+kIQhPOJxEgXvy+zaZpMuVx+hhC60BdAVdXj0Wj0rSRJviZe0ITy+bzpOM5pAPi02bslAUrp53Q6PTsxMZaj7+Kzbbv9LJcRQke6AFRVvcRx3P1UKtXzXx90t/3qdV23LMu6OjMz87Rd8zcBQojGsuyORN8J43leyHGcHwAAWwAopYdc1z04rp0OnP+h0LfN8Tz0Z7TTQHsAPwHv3BIw9zTkUQAAAABJRU5ErkJggg=='\n}\n\nexport class Texture {\n  constructor(symbolType) {\n    this.symbolType = symbolType\n  }\n\n  load() {\n    // Load a texture synchronously\n    let image = new Image()\n    image.src = 'data:image/png;base64' + imageData[this.symbolType]\n    let texture = new THREE.Texture(image)\n    texture.needsUpdate = true\n    return texture\n  }\n}\nexport const symbolTypes = Object.keys(imageData)\n\n","import _ from 'underscore'\nimport * as d3 from 'd3'\n/*\n * Utility functions\n */\n\nexport function getCanvasColor(color) {\n  return 'rgba(' + color.r + ',' + color.g + ',' + color.b + ',' + color.a + ')'\n}\n\nexport const RARE = 'other'\n\nexport function getDataType(value) {\n  let type = typeof value\n  if (type === 'number') {\n    type = 'int'\n    if (!Number.isInteger(value)) {\n      type = 'float'\n    }\n  }\n  return type\n}\n\nexport function orderArray(arr, indices) {\n  // Reorder arr based on indices\n  const orderedArr = new Array(arr.length)\n  for (let i = 0; i < arr.length; i++) {\n    orderedArr[i] = arr[indices[i]]\n  }\n  return orderedArr\n}\n\nexport function encodeRareCategories(arr, k) {\n  // Count occurrences of each unique categories in arr,\n  // then keep top k and encode rare categories as 'rares'\n  let counts = _.countBy(arr)\n  // sort values\n  counts = _.sortBy(_.pairs(counts), tuple => -tuple[1])\n  // get top k frequent categories\n  const frequentCategories = _.map(counts.slice(0, k), tuple => tuple[0])\n  for (let i = 0; i < arr.length; i++) {\n    if (frequentCategories.indexOf(arr[i]) === -1) {\n      arr[i] = RARE\n    }\n  }\n  return arr\n}\n\nexport function binValues(arr, nbins) {\n  // Binning continues array of values in to nbins\n  let extent = d3.extent(arr)\n  let min = parseFloat(extent[0])\n  let max = parseFloat(extent[1])\n  let interval = (max - min) / nbins // bin width\n\n  let domain = _.range(1, nbins).map(function(i) {\n    return i * interval + min\n  }) // bin edges\n  let labels = [min.toFixed(2) + ' to ' + domain[0].toFixed(2)]\n\n  for (let i = 0; i < nbins - 1; i++) {\n    let label\n    if (i === nbins - 2) {\n      // the last bin\n      label = domain[i].toFixed(2) + ' to ' + max.toFixed(2)\n    } else {\n      label = domain[i].toFixed(2) + ' to ' + domain[i + 1].toFixed(2)\n    }\n    labels.push(label)\n  }\n  return {\n    labels: labels,\n    domain: domain,\n    min: min,\n    max: max,\n    interval: interval\n  }\n}\n\nexport function binValues2(arr, domain) {\n  // Binning continues array of values by a given binEdges (domain)\n  // domain: [0.001, 0.01, 0.05, 0.1, 1]\n  // domain should include the largest (rightest) value\n  let extent = d3.extent(arr)\n  let min = parseFloat(extent[0])\n  let max = parseFloat(extent[1])\n\n  let labels = ['0 to ' + domain[0]]\n  let nbins = domain.length\n\n  for (let i = 0; i < nbins - 1; i++) {\n    let label = domain[i] + ' to ' + domain[i + 1]\n    labels.push(label)\n  }\n  return { labels: labels, domain: domain.slice(0, -1), min: min, max: max }\n}\n\nexport function binBy(list, key, nbins) {\n  // similar to _.groupBy but applying to continues values using `binValues`\n  // list: an array of objects\n  // key: name of the continues letiable\n  // nbins: number of bins\n  let values = _.pluck(list, key)\n  let binnedValues = binValues(values, nbins)\n  let labels = binnedValues.labels\n  let min = binnedValues.min\n  let interval = binnedValues.interval\n\n  let grouped = _.groupBy(list, function(obj) {\n    let i = Math.floor((obj[key] - min) / interval)\n    if (i === nbins) {\n      // the max value\n      i = nbins - 1\n    }\n    return labels[i]\n  })\n  return grouped\n}\n\nexport function binBy2(list, key, domain) {\n  // wrapper for `binValuesBy`\n  let values = _.pluck(list, key)\n  let binnedValues = binValues2(values, domain)\n  let labels = binnedValues.labels\n\n  let grouped = _.groupBy(list, function(obj) {\n    let i = _.filter(domain, function(edge) {\n      return edge < obj[key]\n    }).length\n    return labels[i]\n  })\n  return grouped\n}\n","import * as d3 from 'd3'\nimport * as d3Scale from 'd3-scale'\nimport _ from 'underscore'\nimport * as utils from './utils'\n\nexport class ScatterDataSubset {\n  // \"model\" for PointsGeometry\n  constructor(data) {\n    this.data = data\n    this.n = data.length\n    const { indices, positions } = this.getIndicesAndPositions(data)\n    this.indices = indices\n    this.positions = positions\n  }\n\n  getIndicesAndPositions(data) {\n    const n = this.n\n    const indices = new Uint32Array(n)\n    const positions = new Float32Array(n * 3)\n    for (let i = 0; i < n; i++) {\n      indices[i] = i\n      positions[(i * 3)] = data[i].x\n      positions[(i * 3) + 1] = data[i].y\n      positions[(i * 3) + 2] = data[i].z || 0\n    }\n    return { indices: indices, positions: positions }\n  }\n\n  getAttr(metaKey) {\n    return this.data.map(record => record[metaKey])\n  }\n}\n\nexport class ScatterData {\n  constructor(data) {\n    this.data = data\n    this.n = data.length\n    this.metas = []\n    this.parse()\n    const { indices, positions } = this.getIndicesAndPositions()\n    this.indices = indices\n    this.positions = positions\n  }\n\n  parse() {\n    // extract the meta data `metas` in the array of object\n    const data = this.data\n    const xyz = ['x', 'y', 'z']\n    for (const key of Object.keys(data[0])) {\n      if (xyz.indexOf(key) === -1) {\n        const values = data.map(o => o[key])\n        const nUnique = [...new Set(values)].length\n        const type = utils.getDataType(data[0][key])\n        this.metas.push({\n          name: key,\n          nUnique: nUnique,\n          type: type\n        })\n      }\n    }\n  }\n\n  getIndicesAndPositions() {\n    const n = this.n\n    const indices = new Uint32Array(n)\n    const positions = new Float32Array(n * 3)\n    for (let i = 0; i < n; i++) {\n      indices[i] = i\n      positions[(i * 3)] = this.data[i].x\n      positions[(i * 3) + 1] = this.data[i].y\n      positions[(i * 3) + 2] = this.data[i].z || 0\n      // add index to the object\n      this.data[i].index = i\n    }\n    return { indices: indices, positions: positions }\n  }\n\n  getLabels(labelKeys) {\n    // return an array of label texts given a list of labelKeys\n    const n = this.n\n    const labels = new Array(n)\n    let i = 0\n    for (const record of this.data) {\n      let label = ''\n      for (const labelKey of labelKeys) {\n        label += labelKey + ': ' + record[labelKey] + ' \\n'\n      }\n      labels[i] = label\n      i++\n    }\n    return labels\n  }\n\n  groupBy(metaKey) {\n    // group by a metaKey and return an object of ScatterDataSubset objects keyed by metaKey\n    const dataSubsets = _.groupBy(this.data, metaKey)\n    const scatterDataSubsets = _.mapObject(dataSubsets, (records, key) => {\n      return new ScatterDataSubset(records)\n    })\n    return scatterDataSubsets\n  }\n\n  binBy(metaKey, nbins) {\n    const dataSubsets = utils.binBy(this.data, metaKey, nbins)\n    const scatterDataSubsets = _.mapObject(dataSubsets, (records, key) => {\n      return new ScatterDataSubset(records)\n    })\n    return scatterDataSubsets\n  }\n\n  binBy2(metaKey, domain) {\n    const dataSubsets = utils.binBy2(this.data, metaKey, domain)\n    const scatterDataSubsets = _.mapObject(dataSubsets, (records, key) => {\n      return new ScatterDataSubset(records)\n    })\n    return scatterDataSubsets\n  }\n\n  getAttr(metaKey) {\n    return this.data.map(record => record[metaKey])\n  }\n\n  setAttr(key, values) {\n    for (let i = 0; i < this.n; i++) {\n      const rec = this.data[i]\n      rec[key] = values[i]\n      this.data[i] = rec\n    }\n    // add meta data of this new attr\n    this.metas.push({\n      name: key,\n      nUnique: [...new Set(values)].length,\n      type: utils.getDataType(values[0])\n    })\n  }\n\n  getColorOptions() {\n    let colorOptions = this.metas.filter(meta => {\n      return meta.nUnique < this.n && meta.nUnique > 1\n    })\n    colorOptions = colorOptions.map(meta => {\n      return { value: meta.name, label: meta.name }\n    })\n    return colorOptions\n  }\n\n  getShapeOptions() {\n    let shapeOptions = this.metas.filter(meta => {\n      return meta.type !== 'float' && (meta.nUnique < 7 && meta.nUnique > 1)\n    })\n    shapeOptions = shapeOptions.map(meta => {\n      return { value: meta.name, label: meta.name }\n    })\n    return shapeOptions\n  }\n\n  getSearchOptions(labelKeys) {\n    // labelKeys: array of strings\n    // return an array of objects as input for Select.options\n    let allLabels = []\n    for (const labelKey of labelKeys) {\n      let labels = this.getAttr(labelKey)\n      // take the unique values\n      labels = [...new Set(labels)]\n      labels = labels.map(x => {\n        return { value: x, label: x, key: labelKey }\n      })\n      labels = { label: labelKey, options: labels }\n      allLabels.push(labels)\n    }\n    return allLabels\n  }\n\n  calculateColorScale(metaKey) {\n    // Color points by a certain metaKey\n    // update colorKey\n    let metas = this.getAttr(metaKey)\n\n    const meta = _.findWhere(this.metas, { name: metaKey })\n    const dtype = meta.type\n\n    if (dtype !== 'float' && dtype !== 'int' && meta.nUnique > 20) {\n      metas = utils.encodeRareCategories(metas, 19)\n    }\n    let uniqueCats = new Set(metas)\n    const nUniqueCats = uniqueCats.size\n    uniqueCats = Array.from(uniqueCats)\n    // Make unknown to be gray\n    if (uniqueCats.indexOf('unknown') !== -1) {\n      if (uniqueCats.length > 7) {\n        const idx = uniqueCats.indexOf('unknown')\n        let greyIdx = 7\n        if (uniqueCats.length === 20) {\n          greyIdx = 15\n        }\n        const elem = uniqueCats[greyIdx]\n        uniqueCats[greyIdx] = 'unknown'\n        uniqueCats[idx] = elem\n      }\n    }\n    // Make RARE to be grey\n    if (uniqueCats.indexOf(utils.RARE) !== -1) {\n      if (uniqueCats.length === 20) {\n        const idx = uniqueCats.indexOf(utils.RARE)\n        let greyIdx2 = 15\n        if (uniqueCats.indexOf('unknown') !== -1) {\n          greyIdx2 = 14\n        }\n        const elem = uniqueCats[greyIdx2]\n        uniqueCats[greyIdx2] = utils.RARE\n        uniqueCats[idx] = elem\n      }\n    }\n\n    // make colorScale\n    let colorExtent = d3.extent(metas)\n    const minScore = colorExtent[0]\n    const maxScore = colorExtent[1]\n    let colorScale = d3Scale\n      .scalePow()\n      .domain([minScore, (minScore + maxScore) / 2, maxScore])\n      .range(['#1f77b4', '#ddd', '#d62728'])\n\n    if (dtype === 'boolean') {\n      colorScale = d3Scale\n        .scaleOrdinal()\n        .domain([true, false])\n        .range(['#cc0000', '#cccccc'])\n    } else if (nUniqueCats < 11) {\n      colorScale = d3Scale.scaleOrdinal(d3.schemeCategory10).domain(uniqueCats)\n    } else if (nUniqueCats > 10 && nUniqueCats <= 20) {\n      colorScale = d3Scale.scaleOrdinal(d3.schemeCategory10).domain(uniqueCats)\n    } else if (nUniqueCats <= 40) {\n      const colors40 = [\n        '#1b70fc',\n        '#faff16',\n        '#d50527',\n        '#158940',\n        '#f898fd',\n        '#24c9d7',\n        '#cb9b64',\n        '#866888',\n        '#22e67a',\n        '#e509ae',\n        '#9dabfa',\n        '#437e8a',\n        '#b21bff',\n        '#ff7b91',\n        '#94aa05',\n        '#ac5906',\n        '#82a68d',\n        '#fe6616',\n        '#7a7352',\n        '#f9bc0f',\n        '#b65d66',\n        '#07a2e6',\n        '#c091ae',\n        '#8a91a7',\n        '#88fc07',\n        '#ea42fe',\n        '#9e8010',\n        '#10b437',\n        '#c281fe',\n        '#f92b75',\n        '#07c99d',\n        '#a946aa',\n        '#bfd544',\n        '#16977e',\n        '#ff6ac8',\n        '#a88178',\n        '#5776a9',\n        '#678007',\n        '#fa9316',\n        '#85c070',\n        '#6aa2a9',\n        '#989e5d',\n        '#fe9169',\n        '#cd714a',\n        '#6ed014',\n        '#c5639c',\n        '#c23271',\n        '#698ffc',\n        '#678275',\n        '#c5a121',\n        '#a978ba',\n        '#ee534e',\n        '#d24506',\n        '#59c3fa',\n        '#ca7b0a',\n        '#6f7385',\n        '#9a634a',\n        '#48aa6f',\n        '#ad9ad0',\n        '#d7908c',\n        '#6a8a53',\n        '#8c46fc',\n        '#8f5ab8',\n        '#fd1105',\n        '#7ea7cf',\n        '#d77cd1',\n        '#a9804b',\n        '#0688b4',\n        '#6a9f3e',\n        '#ee8fba',\n        '#a67389',\n        '#9e8cfe',\n        '#bd443c',\n        '#6d63ff',\n        '#d110d5',\n        '#798cc3',\n        '#df5f83',\n        '#b1b853',\n        '#bb59d8',\n        '#1d960c',\n        '#867ba8',\n        '#18acc9',\n        '#25b3a7',\n        '#f3db1d',\n        '#938c6d',\n        '#936a24',\n        '#a964fb',\n        '#92e460',\n        '#a05787',\n        '#9c87a0',\n        '#20c773',\n        '#8b696d',\n        '#78762d',\n        '#e154c6',\n        '#40835f',\n        '#d73656',\n        '#1afd5c',\n        '#c4f546',\n        '#3d88d8',\n        '#bd3896',\n        '#1397a3',\n        '#f940a5',\n        '#66aeff',\n        '#d097e7',\n        '#fe6ef9',\n        '#d86507',\n        '#8b900a',\n        '#d47270',\n        '#e8ac48',\n        '#cf7c97',\n        '#cebb11',\n        '#718a90',\n        '#e78139',\n        '#ff7463',\n        '#bea1fd'\n      ]\n      colorScale = d3Scale\n        .scaleOrdinal()\n        .range(colors40)\n        .domain(uniqueCats)\n    }\n\n    return colorScale\n  }\n\n  calculateShapeScale(metaKey) {\n    let symbols = d3.symbols.map(t => d3.symbol().type(t)())\n\n    // make shapeScale for d3.legend\n    const meta = _.findWhere(this.metas, { name: metaKey })\n\n    // categorical data\n    // get grouped datasets, each group is going to be a cloud\n    let scatterDataSubsets = this.groupBy(metaKey)\n    let shapeLabels\n    let shapeScale = d3Scale\n      .scaleOrdinal()\n      .domain(Object.keys(scatterDataSubsets))\n      .range(symbols)\n\n    if (['int', 'float'].indexOf(meta.type) !== -1 && meta.nUnique > 6) {\n      // get grouped datasets, each group is going to be a cloud\n      scatterDataSubsets = this.binBy(metaKey, 6)\n      // Make a threshold scale\n      let binnedValues = utils.binValues(_.pluck(this.data, metaKey), 6)\n\n      if (meta.name === 'p-value') {\n        // get grouped datasets, each group is going to be a cloud\n        const pValueDomain = [0.001, 0.01, 0.05, 0.1, 1]\n        scatterDataSubsets = this.binBy2(metaKey, pValueDomain)\n        // Make a threshold scale\n        binnedValues = utils.binValues2(\n          _.pluck(this.data, metaKey),\n          pValueDomain\n        )\n        // overwrite the symbols map to make it having the same length with pValueDomain\n        symbols = _.map(\n          d3.symbols.slice(0, pValueDomain.length),\n          function (t) {\n            return d3.symbol().type(t)()\n          }\n        )\n      }\n\n      shapeScale = d3Scale\n        .scaleThreshold()\n        .domain(binnedValues.domain)\n        .range(symbols)\n      shapeLabels = binnedValues.labels\n    }\n    return {\n      shapeScale: shapeScale,\n      shapeLabels: shapeLabels,\n      scatterDataSubsets: scatterDataSubsets\n    }\n  }\n}\n","import React from 'react'\nimport * as THREE from 'three'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js'\nimport { BufferGeometryUtils } from 'three/examples/jsm/utils/BufferGeometryUtils.js'\nimport _ from 'underscore'\nimport { Texture, symbolTypes } from './texture'\nimport * as utils from './utils'\nimport { ScatterData, ScatterDataSubset } from './ScatterData.js'\nimport PropTypes from 'prop-types'\n\nclass PointsGeometry {\n  constructor(args) {\n    this.model = args.model\n    this.geometry = null\n\n    this.createGeometry()\n  }\n\n  createGeometry() {\n    const geometry = new THREE.BufferGeometry()\n\n    const model = this.model\n\n    geometry.setIndex(new THREE.BufferAttribute(model.indices, 1))\n    geometry.setAttribute(\n      'position',\n      new THREE.BufferAttribute(model.positions, 3)\n    )\n    // this is used for tracking the original orders of the data objects in the entire ScatterData\n    geometry.userData = { index: model.getAttr('index') }\n\n    geometry.computeBoundingSphere()\n\n    this.geometry = geometry\n  }\n}\n\n/**\n * The 3d canvas view underyling the scatterBoard\n */\nexport class Scatter3dView extends React.Component {\n  constructor(props) {\n    super(props)\n    const is3d = this.props.is3d\n    this.state = {\n      isLoading: false,\n      isLoaded: false,\n      url: this.props.url,\n      data: this.props.data,\n      model: null,\n      WIDTH: this.props.width || 1400,\n      HEIGHT: this.props.height || 800,\n      DPR: this.props.DPR || 2,\n      labelKeys: this.props.labelKeys, // which metaKey to use as labels\n      colorKey: this.props.colorKey, // which metaKey to use as colors\n      shapeKey: this.props.shapeKey,\n      pointSize: is3d ? 0.5 : 12, // the size of the points\n      is3d: is3d, // 3d or 2d\n      colorScale: this.props.colorScale,\n      shapeScale: this.props.shapeScale,\n      shapeLabels: this.props.shapeLabels\n    }\n    // events\n    this.onMouseMove = this.onMouseMove.bind(this)\n    this.onMouseDown = this.onMouseDown.bind(this)\n    this.onMouseUp = this.onMouseUp.bind(this)\n    this.onClick = this.onClick.bind(this)\n  }\n\n  componentDidMount() {\n    // fetch data from url\n    if (this.props.url) {\n      // url is given\n      this.setState({ isLoading: true })\n      fetch(this.props.url)\n        .then(response => {\n          if (response.ok) {\n            return response.json()\n          } else {\n            throw new Error('Something went wrong when fetching data ...')\n          }\n        })\n        .then(data => {\n          this.setState({\n            data: data,\n            model: new ScatterData(data), // init model\n            isLoading: false,\n            isLoaded: true\n          })\n          this.makeMaterial()\n          this.setUpStage()\n          this.shapeBy(this.state.shapeKey)\n        })\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (!this.props.url) {\n      // only trigger rendering when url is not set directly to prop\n      // data is set via parent compoent\n      if (\n        prevState.data === null &&\n        prevProps.data === null &&\n        this.props.data !== null &&\n        this.state.data === null\n      ) {\n        this.makeMaterial()\n        this.setUpStage()\n      } else if (this.props.data !== null && this.props.shapeScale !== null) {\n        this.shapeBy(this.props.shapeKey) // will update state shapeScale etc.\n        this.startAnimate()\n      } else if (this.props.colorKey !== prevProps.colorKey) {\n        // colorKey changed through parent state passed as prop\n      }\n    }\n  }\n  componentWillUnmount() {\n    if (this.animateId) {\n      this.stopAnimate()\n    }\n  }\n\n  render() {\n    return (\n      <div\n        ref={ref => (this.mount = ref)}\n        onMouseDown={this.onMouseDown}\n        onMouseMove={this.onMouseMove}\n        onMouseUp={this.onMouseUp}\n        onClick={this.onClick}\n      />\n    )\n  }\n\n  setUpStage() {\n    // set up THREE.js visualization components\n    const { WIDTH, HEIGHT, DPR } = this.state\n    const aspectRatio = WIDTH / HEIGHT\n\n    // set up scene, camera, renderer\n    const scene = new THREE.Scene()\n    // set the id for this object\n    this.id = scene.uuid\n\n    const renderer = new THREE.WebGLRenderer()\n    renderer.setClearColor(0xffffff)\n    renderer.setPixelRatio(DPR)\n    renderer.setSize(WIDTH, HEIGHT)\n\n    // 2d\n    const ORTHO_CAMERA_FRUSTUM_HALF_EXTENT = 10.5\n    let left = -ORTHO_CAMERA_FRUSTUM_HALF_EXTENT\n    let right = ORTHO_CAMERA_FRUSTUM_HALF_EXTENT\n    let bottom = -ORTHO_CAMERA_FRUSTUM_HALF_EXTENT\n    let top = ORTHO_CAMERA_FRUSTUM_HALF_EXTENT\n    // Scale up the larger of (w, h) to match the aspect ratio.\n    if (aspectRatio > 1) {\n      left *= aspectRatio\n      right *= aspectRatio\n    } else {\n      top /= aspectRatio\n      bottom /= aspectRatio\n    }\n    let camera = new THREE.OrthographicCamera(\n      left,\n      right,\n      top,\n      bottom,\n      -1000,\n      1000\n    )\n    if (this.state.is3d) {\n      camera = new THREE.PerspectiveCamera(70, aspectRatio, 0.01, 1000000)\n      camera.position.z = 30\n    }\n\n    // Put the renderer's DOM into the container\n    renderer.domElement.id = 'renderer-' + this.id\n    this.mount.appendChild(renderer.domElement)\n\n    // set up orbit controls\n    const controls = new OrbitControls(camera, renderer.domElement)\n\n    controls.enableZoom = true\n    controls.enableDamping = true\n    controls.dampingFactor = 0.25\n    controls.screenSpacePanning = true\n\n    if (!this.state.is3d) {\n      controls.enableRotate = false\n      controls.mouseButtons = {\n        LEFT: THREE.MOUSE.RIGHT,\n        MIDDLE: THREE.MOUSE.DOLLY,\n        RIGHT: THREE.MOUSE.LEFT\n      }\n    } else {\n      controls.autoRotate = true\n      controls.autoRotateSpeed = 2.0\n    }\n\n    controls.addEventListener('start', function () {\n      controls.autoRotate = false\n    })\n\n    const mouse = new THREE.Vector2()\n\n    // bind three js objects to component\n    this.scene = scene\n    this.renderer = renderer\n    this.camera = camera\n    this.controls = controls\n    this.mouse = mouse\n    this.updated = true\n  }\n\n  onMouseDown(e) {\n    this.mouseMoved = false\n  }\n\n  onMouseMove(e) {\n    const { WIDTH, HEIGHT } = this.state\n    if (e.nativeEvent !== undefined) {\n      Object.assign(this.mouse, {\n        x: (e.nativeEvent.offsetX / WIDTH) * 2 - 1,\n        y: -(e.nativeEvent.offsetY / HEIGHT) * 2 + 1,\n      })\n    }\n    this.updated = true\n    this.mouseMoved = true\n  }\n\n  onMouseUp(e) {\n    if (this.mouseMoved === true) return\n    this.onClick(e)\n  }\n\n  onClick(e) {\n    if (typeof this.props.onClick === 'function') {\n      const trueIdx = this.points.geometry.userData.index[this.getPoint()]\n      const datum = this.props.model.data[trueIdx]\n      this.props.onClick(e, datum)\n    }\n  }\n\n  makeMaterial() {\n    const materials = []\n    for (const symbolType of symbolTypes) {\n      const textureResult = new Texture(symbolType).load()\n\n      const material = new THREE.PointsMaterial({\n        vertexColors: THREE.VertexColors,\n        size: this.state.pointSize,\n        sizeAttenuation: this.state.is3d,\n        map: textureResult,\n        alphaTest: 0.2,\n        transparent: true,\n        opacity: 0.6\n      })\n      materials.push(material)\n    }\n\n    this.materials = materials\n  }\n\n  clearScene() {\n    const scene = this.scene\n    for (const child of scene.children) {\n      scene.remove(child)\n    }\n  }\n\n  shapeBy(metaKey) {\n    const model = this.props.model\n    const scene = this.scene\n    const { scatterDataSubsets } = model.calculateShapeScale(metaKey)\n\n    // Update geometry by merging individual genmetries from each group\n    const geometries = []\n    for (const key of Object.keys(scatterDataSubsets)) {\n      const geometry = new PointsGeometry({\n        model: scatterDataSubsets[key]\n      })\n      geometries.push(geometry.geometry)\n    }\n    const mergedGeometry = BufferGeometryUtils.mergeBufferGeometries(geometries)\n    // concat all indices from each geometry\n    const arrayOfIndices = geometries.map(g => g.userData.index)\n    const indices = arrayOfIndices.reduce((arr1, arr2) => {\n      return arr1.concat(arr2)\n    })\n    let labels = model.getLabels(this.state.labelKeys)\n    labels = utils.orderArray(labels, indices)\n\n    mergedGeometry.userData = { index: indices, labels: labels }\n    const groupSizes = geometries.map(g => g.index.count)\n    // to keep track of the cumulative sums of the group sizes, prepended by -1\n    const cumsums = groupSizes.reduce(\n      (a, x, i) => [...a, x + (a[i - 1] || 0)],\n      []\n    )\n    cumsums.unshift(-1)\n\n    for (let i = 0; i < geometries.length; i++) {\n      mergedGeometry.addGroup(cumsums[i] + 1, groupSizes[i], i)\n    }\n\n    const points = new THREE.Points(mergedGeometry, this.materials)\n    // clear clouds\n    this.clearScene()\n    scene.add(points)\n    this.points = points\n\n    // set colors\n    this.setColors(this.props.colorScale, this.props.colorKey)\n  }\n\n  renderScatter() {\n    const closestPoint = this.getPoint()\n    // reset colors\n    this.resetColors()\n    // remove text-label if exists\n    const textLabel = document.getElementById('text-label-' + this.id)\n    if (textLabel) {\n      textLabel.remove()\n    }\n\n    // add interactivities if there is intesecting points\n    if (closestPoint !== undefined) {\n      // change color of the point\n      this.points.geometry.attributes.color.needsUpdate = true\n\n      this.points.geometry.attributes.color.array[closestPoint * 3] = 0.1\n      this.points.geometry.attributes.color.array[closestPoint * 3 + 1] = 0.8\n      this.points.geometry.attributes.color.array[closestPoint * 3 + 2] = 0.1\n\n      // find the position of the point\n      const pointPosition = {\n        x: this.points.geometry.attributes.position.array[closestPoint * 3],\n        y: this.points.geometry.attributes.position.array[closestPoint * 3 + 1],\n        z: this.points.geometry.attributes.position.array[closestPoint * 3 + 2]\n      }\n      // add text canvas\n      const textCanvas = this.makeTextCanvas(\n        this.points.geometry.userData.labels[closestPoint],\n        pointPosition.x,\n        pointPosition.y,\n        pointPosition.z,\n        this.points.rotation,\n        {\n          fontsize: 24,\n          fontface: 'arial, sans-serif',\n          textColor: { r: 0, g: 0, b: 0, a: 0.8 }\n        }\n      )\n\n      textCanvas.id = 'text-label-' + this.id\n      this.mount.appendChild(textCanvas)\n\n      if (typeof this.props.onMouseOver === 'function') {\n        const trueIdx = this.points.geometry.userData.index[closestPoint]\n        const datum = this.props.model.data[trueIdx]\n        this.props.onMouseOver(datum)\n      }\n    }\n  }\n\n  makeTextCanvas(message, x, y, z, euler, parameters) {\n    if (parameters === undefined) parameters = {}\n    const fontface = parameters.hasOwnProperty('fontface')\n      ? parameters['fontface']\n      : 'arial, sans-serif'\n    const fontsize = parameters.hasOwnProperty('fontsize')\n      ? parameters['fontsize']\n      : 18\n    const textColor = parameters.hasOwnProperty('textColor')\n      ? parameters['textColor']\n      : { r: 0, g: 0, b: 255, a: 0.8 }\n    const lineHeight = parameters.hasOwnProperty('lineHeight')\n      ? parameters['lineHeight']\n      : 20\n\n    const canvas = document.createElement('canvas')\n    const context = canvas.getContext('2d')\n\n    const { WIDTH, HEIGHT } = this.state\n    canvas.width = WIDTH\n    canvas.height = HEIGHT\n\n    context.font = fontsize + 'px ' + fontface\n    context.textBaseline = 'alphabetic'\n\n    context.textAlign = 'left'\n\n    // text color.  Note that we have to do this AFTER the round-rect as it also uses the \"fillstyle\" of the canvas\n    context.fillStyle = utils.getCanvasColor(textColor)\n\n    // calculate the project of 3d point into 2d plain\n    const point = new THREE.Vector3(x, y, z).applyEuler(euler)\n    const pv = new THREE.Vector3().copy(point).project(this.camera)\n    const coords = {\n      x: ((pv.x + 1) / 2) * WIDTH, // * this.DPR,\n      y: -(((pv.y - 1) / 2) * HEIGHT) // * this.DPR\n    }\n    // draw the text (in multiple lines)\n    const lines = message.split('\\n')\n    for (let i = 0; i < lines.length; i++) {\n      context.fillText(lines[i], coords.x, coords.y + i * lineHeight)\n    }\n\n    // styles of canvas element\n    canvas.style.left = 0\n    canvas.style.top = 0\n    canvas.style.position = 'absolute'\n    canvas.style.pointerEvents = 'none'\n\n    return canvas\n  }\n\n  resetColors() {\n    this.setColors(this.props.colorScale, this.props.colorKey)\n  }\n\n  setColors(colorScale, metaKey) {\n    // Color points by a certain metaKey given colorScale\n    const model = this.props.model\n    let metas = model.getAttr(metaKey)\n    const geometry = this.points.geometry\n    const idx = geometry.userData.index\n    metas = utils.orderArray(metas, idx)\n\n    const meta = _.findWhere(model.metas, { name: metaKey })\n    const dtype = meta.type\n    if (dtype !== 'float' && dtype !== 'int' && meta.nUnique > 20) {\n      metas = utils.encodeRareCategories(metas, 19)\n    }\n\n    // construct colors BufferAttribute\n    const colors = new Float32Array(model.n * 3)\n    let frequentCategories = { length: 2 }\n    if (colorScale.hasOwnProperty('domain')) {\n      frequentCategories = colorScale.domain().slice()\n    }\n\n    for (let i = metas.length - 1; i >= 0; i--) {\n      let color = colorScale(metas[i])\n      color = new THREE.Color(color)\n      color.toArray(colors, i * 3)\n    }\n\n    if (frequentCategories.length > 3) {\n      for (let i = metas.length - 1; i >= 0; i--) {\n        let color = colorScale(metas[i])\n        if (frequentCategories.indexOf(metas[i]) === -1) {\n          color = colorScale(utils.RARE)\n        }\n        color = new THREE.Color(color)\n        color.toArray(colors, i * 3)\n      }\n    }\n    geometry.setAttribute('color', new THREE.BufferAttribute(colors.slice(), 3))\n  }\n\n  startAnimate() {\n    if (!this.animateId) {\n      this.animate()\n    }\n  }\n  animate() {\n    const { renderer, scene, camera } = this\n    this.controls.update()\n    if (this.updated) {\n      this.renderScatter()\n      this.updated = false\n    }\n    renderer.render(scene, camera)\n    this.animateId = window.requestAnimationFrame(() => this.animate())\n  }\n\n  stopAnimate() {\n    window.cancelAnimationFrame(this.animateId)\n  }\n\n  highlightQuery(metaKey, query) {\n    // To highlight a query result by adding a new PointsGeometry\n    // instance to the scene\n    this.removeHighlightedPoints()\n    // get the reordered data in geometry\n    const reorderedData = utils.orderArray(\n      this.props.model.data,\n      this.points.geometry.userData.index\n    )\n    // find the matched data points\n    const matchedData = reorderedData.filter(rec => {\n      return rec[metaKey] === query\n    })\n    const dataSubset = new ScatterDataSubset(matchedData)\n    const highlightCould = this.createHighlightCloud(dataSubset)\n    highlightCould.name = 'highlight-' + this.id\n    this.scene.add(highlightCould)\n  }\n\n  createHighlightCloud(dataSubset) {\n    // dataSubset should be a ScatterDataSubset instance\n    const geometryHighlight = new PointsGeometry({ model: dataSubset })\n    const material = new THREE.PointsMaterial({\n      size: this.state.pointSize * 5,\n      sizeAttenuation: this.state.is3d,\n      map: this.materials[0].map,\n      transparent: true,\n      opacity: 0.4,\n      color: 0xffff00\n    })\n\n    const highlightPoints = new THREE.Points(\n      geometryHighlight.geometry,\n      material\n    )\n    // update rotation\n    highlightPoints.rotation.x = this.points.rotation.x\n    highlightPoints.rotation.y = this.points.rotation.y\n    return highlightPoints\n  }\n\n  removeHighlightedPoints() {\n    const scene = this.scene\n    scene.remove(scene.getObjectByName('highlight-' + this.id))\n  }\n\n  getPoint() {\n    const { mouse, camera } = this\n\n    let closestPoint = undefined\n    let closestDist = undefined\n    let point3 = new THREE.Vector3()\n    let point2 = new THREE.Vector2()\n\n    for (const pointIndex of this.points.geometry.index.array) {\n      point3.set(\n        this.points.geometry.attributes.position.array[pointIndex * 3],\n        this.points.geometry.attributes.position.array[pointIndex * 3 + 1],\n        this.points.geometry.attributes.position.array[pointIndex * 3 + 2]\n      )\n      point3.project(camera)\n      point2.set(point3.x, point3.y)\n      const dist = point2.distanceToSquared(mouse)\n      if (dist < Math.min(1.0, 1 / (camera.zoom * camera.zoom)) && (closestDist === undefined || dist < closestDist)) {\n        closestPoint = pointIndex\n        closestDist = dist\n      }\n    }\n    return closestPoint\n  }\n}\n\nScatter3dView.propTypes = {\n  /**\n   * ([{x: 0, y: 0, z: 0, ...}]): the json formatted data \n   */\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      x: PropTypes.number.isRequired,\n      y: PropTypes.number.isRequired,\n      z: PropTypes.number,\n    })\n  ),\n  /**\n   * ScatterData(data)\n   */\n  model: PropTypes.any,\n  /**\n   * (_number_): the width of the component in pixels. Default: 1400.\n   */\n  width: PropTypes.number,\n  /**\n   * (_number_): the height of the component in pixels. Default: 800.\n   */\n  height: PropTypes.number,\n  /**\n   * (_number_): the device pixel ratio (window.devicePixelRatio)\n   */\n  DPR: PropTypes.number,\n  /**\n   * (_string_): the key to color the dots by default.\n   */\n  colorKey: PropTypes.string,\n  /**\n   * (_string_): the key to shape the dots by default.\n   */\n  shapeKey: PropTypes.string,\n  /**\n   * (_Array_ of strings): the ordered list of keys of attributes to display for the dots when mouse hovers.\n   */\n  labelKeys: PropTypes.arrayOf(PropTypes.string),\n  /**\n   * (d3-color-scale): Color scale\n   */\n  colorScale: PropTypes.any,\n  /**\n   * (d3-color-scale): Color scale\n   */\n  shapeScale: PropTypes.any,\n  /**\n   * (d3-color-scale): Color scale\n   */\n  shapeLabels: PropTypes.any,\n  /**\n   * (_boolean_): should the scatter plot in 3-D (true) or 2-D (false).\n   */\n  is3d: PropTypes.bool,\n  /**\n   * (_function_): a callback function handling when user click a data point. The input of the function is mouse event and the datum object being clicked.\n   */\n  onClick: PropTypes.func,\n  /**\n   * (_function_): a callback function handling when user hovers over a data point. The input of the function is the datum object being clicked.\n   */\n  onMouseOver: PropTypes.func,\n\n  /// DASH\n\n  /**\n   * The ID used to identify this component in Dash callbacks.\n   */\n  id: PropTypes.string,\n  /**\n   * Dash-assigned callback that should be called to report property changes\n   * to Dash, to make them available for callbacks.\n   */\n  setProps: PropTypes.func,\n}\n","/*\nThe widgets for the interactive scatter plot.\n*/\nimport React from 'react'\nimport * as d3 from 'd3'\nimport legend from 'd3-svg-legend'\nimport Select from 'react-select'\n\nexport class Legend extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      width: this.props.width || 300,\n      height: this.props.height || 800\n    }\n  }\n\n  componentDidMount() {\n    this.setUpDOMs()\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.colorScale !== this.props.colorScale) {\n      this.displayColorLegend(this.props.colorScale, this.props.colorKey)\n    }\n    if (prevProps.shapeScale !== this.props.shapeScale) {\n      this.displayShapeLegend(\n        this.props.shapeScale,\n        this.props.shapeKey,\n        this.props.shapeLabels\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div\n        ref={ref => (this.mount = ref)}\n        // onMouseMove={e => this.handleMouseMove(e)}\n      />\n    )\n  }\n\n  setUpDOMs() {\n    // set up DOMs for the legends\n    const { width, height } = this.state\n    this.el = d3\n      .select(this.mount)\n      .append('svg')\n      .attr('id', 'legend')\n      .attr('width', width)\n      .attr('height', height)\n\n    this.g = this.el\n      .append('g')\n      .attr('class', 'legend')\n      .attr('transform', 'translate(10, 20)')\n    this.g\n      .append('g')\n      .attr('id', 'legendShape')\n      .attr('class', 'legendPanel')\n      .attr('transform', 'translate(0, 0)')\n    this.g\n      .append('g')\n      .attr('id', 'legendColor')\n      .attr('class', 'legendPanel')\n      .attr('transform', 'translate(110, 0)')\n\n    // styles\n    this.mount.style.position = 'absolute'\n    this.mount.style.zIndex = 10\n    this.mount.style.overflow = 'visible'\n    this.mount.style.left = 0\n    this.mount.style.top = 0\n    this.mount.style.pointerEvents = 'none'\n  }\n\n  displayShapeLegend(shapeScale, shapeKey, shapeLabels) {\n    const legendShape = legend\n      .legendSymbol()\n      .scale(shapeScale)\n      .orient('vertical')\n      .title(shapeKey)\n    if (shapeLabels) {\n      legendShape.labels(shapeLabels)\n    }\n    this.g.select('#legendShape').call(legendShape)\n  }\n\n  displayColorLegend(colorScale, colorKey) {\n    const legendColor = legend\n      .legendColor()\n      .title(colorKey)\n      .shapeWidth(20)\n      .cells(5)\n      .labelFormat(d3.format('.2f'))\n      .scale(colorScale)\n\n    this.g.select('#legendColor').call(legendColor)\n  }\n}\n\nexport class SelectDropdown extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      label: this.props.label,\n      options: null,\n      defaultValue: this.props.defaultValue\n    }\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  render() {\n    return (\n      <div ref={ref => (this.mount = ref)}>\n        <label>{this.props.label}</label>\n        <Select\n          defaultValue={this.state.defaultValue}\n          options={this.props.options}\n          onChange={this.handleChange}\n          styles={{\n            container: () => ({\n              width: this.props.width\n            })\n          }}\n        />\n      </div>\n    )\n  }\n\n  handleChange(value) {\n    this.props.onSelectChange(value)\n  }\n}\n\nexport class SearchSelectize extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      searchStr: '',\n      searched: false\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.handleClear = this.handleClear.bind(this)\n  }\n\n  render() {\n    const searched = this.state.searched\n    return (\n      <div ref={ref => (this.mount = ref)}>\n        <label>{this.props.label}</label>\n        <Select\n          defaultValue=''\n          defaultInputValue=''\n          placeholder='Type to search...'\n          options={this.props.options}\n          onChange={this.handleChange}\n          styles={{\n            container: () => ({\n              width: this.props.width\n            })\n          }}\n        />\n        {searched && (\n          <button\n            onClick={this.handleClear}\n            className='btn btn-sm btn-outline-secondary'\n            style={{ marginTop: 5 }}\n          >\n            Clear highlighted points\n          </button>\n        )}\n      </div>\n    )\n  }\n\n  handleChange(value) {\n    this.setState({ searched: true })\n    this.props.onInputChange(value)\n  }\n\n  handleClear() {\n    this.setState({ searched: false })\n    this.props.onClearBtnClicked()\n  }\n}\n","import React from 'react'\nimport { Scatter3dView } from './ScatterPlot.jsx'\nimport { ScatterData } from './ScatterData.js'\nimport * as scatterWidgets from './ScatterWidgets.jsx'\nimport PropTypes from 'prop-types'\n\n/**\n * A React implementation of THREE.js 2d/3d scatter plot.\n */\nexport class ScatterBoard extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      data: null,\n      model: null,\n      colorScale: null,\n      shapeScale: null,\n      shapeLabels: null,\n      colorKey: this.props.colorKey,\n      shapeKey: this.props.shapeKey,\n      labelKeys: this.props.labelKeys,\n      searchKeys: this.props.searchKeys,\n      is3d: this.props.is3d\n    }\n    // events\n    this.handleColorKeyChange = this.handleColorKeyChange.bind(this)\n    this.handleShapeKeyChange = this.handleShapeKeyChange.bind(this)\n    this.handleSearchInputChange = this.handleSearchInputChange.bind(this)\n    this.handleClearBtnClick = this.handleClearBtnClick.bind(this)\n  }\n\n  componentDidMount() {\n    if (this.props.data !== undefined) {\n      this.setState({\n        data: this.props.data,\n        model: new ScatterData(this.props.data),\n      })\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.data !== this.props.data) {\n      if (this.props.data === undefined) {\n        this.setState({\n          data: null,\n          model: null,\n        })\n      } else {\n        this.setState({\n          data: this.props.data,\n          model: new ScatterData(this.props.data),\n        })\n      }\n    }\n    if (prevState.data === null && prevState.data !== this.state.data) {\n      // data has been fetched for the first time\n      const { colorKey, shapeKey } = this.state\n      const model = this.state.model\n\n      const colorScale = model.calculateColorScale(colorKey)\n      const { shapeScale, shapeLabels } = model.calculateShapeScale(shapeKey)\n      this.setState({\n        colorScale: colorScale,\n        shapeScale: shapeScale,\n        shapeLabels: shapeLabels\n      })\n    }\n  }\n\n  render() {\n    // variables to be passed to children's states\n    const { colorKey, shapeKey, labelKeys, searchKeys, is3d } = this.state\n    const { colorScale, shapeScale, shapeLabels } = this.state\n    const { width, height } = this.props\n    let colorOptions = null\n    let shapeOptions = null\n    let searchOptions = null\n    if (this.state.model) {\n      colorOptions = this.state.model.getColorOptions()\n      shapeOptions = this.state.model.getShapeOptions()\n      if (searchKeys) {\n        searchOptions = this.state.model.getSearchOptions(searchKeys)\n      }\n    }\n    return (\n      <div\n        style={{\n          position: 'relative',\n          padding: 0,\n          width: width,\n          height: height\n        }}\n      >\n        <Scatter3dView\n          data={this.state.data}\n          model={this.state.model}\n          width={width}\n          height={height}\n          DPR={window.devicePixelRatio}\n          colorKey={colorKey}\n          shapeKey={shapeKey}\n          labelKeys={labelKeys}\n          colorScale={colorScale}\n          shapeScale={shapeScale}\n          shapeLabels={shapeScale}\n          is3d={is3d}\n          onClick={this.props.onClick}\n          onMouseOver={this.props.onMouseOver}\n          // create a ref for the parent to refer to the child\n          ref={scatter3dView => {\n            this.scatter3dView = scatter3dView\n          }}\n        />\n        <scatterWidgets.Legend\n          colorScale={colorScale}\n          colorKey={colorKey}\n          shapeScale={shapeScale}\n          shapeKey={shapeKey}\n          shapeLabels={shapeLabels}\n        />\n        <div\n          style={{\n            zIndex: 10,\n            top: 0,\n            right: 0,\n            width: 200,\n            position: 'absolute'\n          }}\n        >\n          {colorOptions && colorOptions.length > 1 && (\n            <scatterWidgets.SelectDropdown\n              label='Color by:'\n              defaultValue={{\n                value: colorKey,\n                label: colorKey\n              }}\n              options={colorOptions}\n              onSelectChange={this.handleColorKeyChange}\n              width={180}\n            />\n          )}\n          {shapeOptions && shapeOptions.length > 1 && (\n            <scatterWidgets.SelectDropdown\n              label='Shape by:'\n              defaultValue={{\n                value: shapeKey,\n                label: shapeKey\n              }}\n              options={shapeOptions}\n              onSelectChange={this.handleShapeKeyChange}\n              width={180}\n            />\n          )}\n          {searchKeys && searchKeys.length > 1 && (\n            <scatterWidgets.SearchSelectize\n              label='Search:'\n              options={searchOptions}\n              onInputChange={this.handleSearchInputChange}\n              onClearBtnClicked={this.handleClearBtnClick}\n              width={180}\n            />\n          )}\n        </div>\n      </div>\n    )\n  }\n\n  handleColorKeyChange(value) {\n    // re-coloring the map when colorKey changed\n    const colorKey = value.value\n    if (colorKey !== this.state.colorKey) {\n      const model = this.state.model\n      const colorScale = model.calculateColorScale(colorKey)\n      this.setState({ colorKey: colorKey, colorScale: colorScale })\n    }\n  }\n\n  handleShapeKeyChange(value) {\n    // re-shaping of the map when shapeKey changed\n    const shapeKey = value.value\n    if (shapeKey !== this.state.shapeKey) {\n      const model = this.state.model\n      const { shapeScale, shapeLabels } = model.calculateShapeScale(shapeKey)\n      this.setState({\n        shapeKey: shapeKey,\n        shapeScale: shapeScale,\n        shapeLabels: shapeLabels\n      })\n    }\n  }\n\n  handleSearchInputChange(valueObj) {\n    // update highlights for new search\n    const { key, value } = valueObj\n    this.scatter3dView.highlightQuery(key, value)\n  }\n\n  handleClearBtnClick() {\n    this.scatter3dView.removeHighlightedPoints()\n  }\n}\n\nScatterBoard.propTypes = {\n  /**\n   * ([{x: 0, y: 0, z: 0, ...}]): the json formatted data \n   */\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      x: PropTypes.number.isRequired,\n      y: PropTypes.number.isRequired,\n      z: PropTypes.number,\n    })\n  ),\n  /**\n   * (_string_): the key to shape the dots by default.\n   */\n  shapeKey: PropTypes.string,\n  /**\n   * (_string_): the key to color the dots by default.\n   */\n  colorKey: PropTypes.string,\n  /**\n   * (_Array_ of strings): the ordered list of keys of attributes to display for the dots when mouse hovers.\n   */\n  labelKeys: PropTypes.arrayOf(PropTypes.string),\n  /**\n   * (_Array_ of strings): the list of keys of attributes to enable the search functionality to query against. If not provided, the SearchSelectize component will not be rendered.\n   */\n  searchKeys: PropTypes.arrayOf(PropTypes.string),\n  /**\n   * (_number_): the width of the component in pixels. Default: 1400.\n   */\n  width: PropTypes.number,\n  /**\n   * (_number_): the height of the component in pixels. Default: 800.\n   */\n  height: PropTypes.number,\n  /**\n   * (_boolean_): should the scatter plot in 3-D (true) or 2-D (false).\n   */\n  is3d: PropTypes.bool,\n  /**\n   * (_function_): a callback function handling when user click a data point. The input of the function is mouse event and the datum object being clicked.\n   */\n  onClick: PropTypes.func,\n  /**\n   * (_function_): a callback function handling when user hovers over a data point. The input of the function is the datum object being clicked.\n   */\n  onMouseOver: PropTypes.func,\n\n  /// DASH\n\n  /**\n   * The ID used to identify this component in Dash callbacks.\n   */\n  id: PropTypes.string,\n  /**\n   * Dash-assigned callback that should be called to report property changes\n   * to Dash, to make them available for callbacks.\n   */\n  setProps: PropTypes.func,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n/**\n * Lazy react component helper for constructing objects with async render functions\n */\nexport class Lazy extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      children: null\n    }\n  }\n\n  componentDidMount() {\n    if (typeof this.props.children !== 'function') {\n      throw new Error('Lazy component expects an asynchronous function body')\n    }\n    this.props.children().then(\n      (children) => this.setState(\n        () => ({ children })\n      )\n    )\n  }\n\n  render() {\n    if (this.state.children !== null) {\n      return this.state.children\n    } else if (this.props.loading === undefined) {\n      return null\n    } else if (typeof this.props.loading === 'function') {\n      return this.props.loading()\n    } else { // assuming this is valid rendered react DOM tree\n      return this.props.loading\n    }\n  }\n}\n\nLazy.propTypes = {\n  /**\n   * A function returning a promise that resolves to a react element\n   */\n  children: PropTypes.func,\n  /**\n   * Loading indicator (node or react component)\n   */\n  loading: PropTypes.oneOfType([\n    PropTypes.element, PropTypes.elementType\n  ]),\n}\n","function get_dtype(v) {\n  if ((v|0) == v) {\n    return 'int'\n  } else if ((v * 1.0) == v) {\n    return 'float'\n  } else if (v==='up' || v ==='down') {\n    return 'direction'\n  } else {\n    return 'string'\n  }\n}\n\nexport async function read_tsv(url) {\n  const response = await fetch(url)\n  const text = await response.text()\n  const rows = text.split('\\n')\n    .filter(line => line.replace(/^\\s+|\\s+$/g, '') !== '')\n    .map(line => line.split('\\t'))\n  const header = rows.shift()\n  if (rows.length === 0) return { header, data: [], dtype: {} }\n  const row_0 = rows[0]\n  const dtype = {}\n  for(let i = 0; i< row_0.length; i++) {\n    dtype[header[i]] = get_dtype(row_0[i])\n  }\n  const data = rows.map((row) => {\n    const rowdict = {}\n    for (let i = 0; i < row.length; i++) {\n      if (dtype[header[i]] === 'int') {\n        rowdict[header[i]] = row[i]|0\n      } else if (dtype[header[i]] === 'float') {\n        rowdict[header[i]] = row[i]*1.0\n      } else {\n        rowdict[header[i]] = row[i]\n      }\n    }\n    return rowdict\n  })\n  return { header, data, dtype }\n}\n","import React, { useState, useEffect } from 'react'\nimport { ScatterBoard } from './react_scatter_board'\nimport { read_tsv } from './utils'\nimport './App.css';\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\n\nimport 'ag-grid-community';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-material.css';\n\nfunction DirectionRenderer({ value }) {\n  if (value === 'up') {\n    return '<b style=\"font-size:200%;\">&uarr;</b style=\"font-size:200%;\">'\n  } else {\n    return '<b style=\"font-size:200%;\">&darr;</b style=\"font-size:200%;\">'\n  }\n}\n\nfunction App() {\n  const [plotData, setPlotData] = useState(undefined)\n  const [tableData, setTableData] = useState(undefined)\n  const [gridApi, setGridApi] = useState(undefined)\n  const [gridColumnApi, setGridColumnApi] = useState(undefined)\n\n  function onGridReady(params) {\n    setGridApi(params.api)\n    setGridColumnApi(params.columnApi)\n    params.columnApi.autoSizeAllColumns()\n    params.api.setFilterModel({\n      adjusted_pvalue: {\n        filterType: 'number',\n        type: 'lessThan',\n        filter: 0.05,\n      }\n    })\n    params.columnApi.applyColumnState({\n      state: [\n        { colId: 'rank', sort: 'asc' },\n        { colId: 'adjusted_pvalue', sort: 'asc' },\n      ],\n      defaultState: { sort: null },\n    })\n  }\n\n  useEffect(() => {\n    ;(async () => {\n      const { data } = await read_tsv('LM2_Deidentified_UMAP.tsv')\n      const _data = []\n      for (const row of data) {\n        const [pid, type, cluster, visit] = row.sid.split('-')\n        _data.push({\n          x: row['UMAP-1']*1.0,\n          y: row['UMAP-2']*1.0,\n          sid: row.sid,\n          pid: pid.slice(1),\n          type,\n          cluster: cluster.slice(1),\n          visit: visit.slice(1),\n        })\n      }\n      setPlotData(_data)\n    })()\n\n    ;(async () => {\n      setTableData(await read_tsv('LM2_Cluster_Enrich.tsv'))\n    })()\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <h2 className=\"title\">Interactive supplement for: Clarke et. al. Predicting Lyme Disease from Patients’ Peripheral Blood Mononuclear Cells Profiled with RNA-sequencing 2</h2>\n        <p className=\"description\">\n          This interactive viewer enables you to explore the <a href=\"https://www.lymemind.org/\">LymeMIND 2</a> patient cohort in gene expression space. Each point on the map corresponds to a participant where the position of each participant was computed based on a UMAP projection of their PMBC mRNA RNA-seq expression vector. Enrichment analysis is applied to explore enriched terms for each cluster. You can explore these enriched terms by clicking on a cluster to review the table below. These enrichment results were computed by performing differential expression between clusters and using the most significantly up and down regulated genes to query with <a href=\"http://maayanlab.cloud/Enrichr/\">Enrichr</a>. The <a href=\"https://maayanlab.github.io/react-scatter-board/\">react scatter board widget</a> is used to render this plot. Acronyms: pid- participant ID.</p>\n      </div>\n      <div className=\"canvas\">\n        {plotData === undefined ? (\n          <div>Loading...</div>\n        ) : (\n          <ScatterBoard\n            data={plotData}\n            shapeKey=\"type\"\n            colorKey=\"cluster\"\n            labelKeys={['pid', 'type', 'cluster', 'visit']}\n            searchKeys={['sid', 'pid', 'type', 'cluster', 'visit']}\n            is3d={false}\n            width={800}\n            height={350}\n            onClick={(evt, datum) => {\n              gridApi.setFilterModel({\n                ...(gridApi.getFilterModel() || {}),\n                cluster: {\n                  filterType: 'text',\n                  type: 'equals',\n                  filter: datum.cluster,\n                },\n              })\n            }}\n          />\n        )}\n      </div>\n      <div className=\"table ag-theme-material\">\n        {tableData === undefined ? (\n          <div>Loading...</div>\n        ) : (\n          <AgGridReact\n            onGridReady={onGridReady}\n            rowData={tableData.data}>\n            {['rank', 'direction', 'library', 'term', 'adjusted_pvalue', 'category', 'cluster']\n              .map((h, ind) =>\n              <AgGridColumn\n                key={h}\n                colId={h}\n                field={h}\n                sortable\n                cellStyle={{\n                  'string': {textAlign: 'left'}\n                }[tableData.dtype[h]]}\n                filter={{\n                  'int': 'agNumberColumnFilter',\n                  'float': 'agNumberColumnFilter',\n                  'string': 'agTextColumnFilter',\n                }[tableData.dtype[h]]}\n                type={{\n                  'int': 'numericColumn',\n                  'float': 'numericColumn',\n                  'string': 'stringColumn'\n                }[tableData.dtype[h]]}\n                resizable\n                valueFormatter={{\n                  'int': undefined,\n                  'float': ({ value }) => value.toPrecision(3),\n                }[tableData.dtype[h]]}\n                cellRenderer={{\n                  'direction': DirectionRenderer,\n                }[tableData.dtype[h]]}\n                comparator={(valueA, valueB) => {\n                  if (tableData.dtype[h] === 'int') {\n                    return valueA - valueB\n                  } else if (tableData.dtype[h] === 'float') {\n                    return valueA - valueB\n                  } else {\n                    if (valueA > valueB) return 1\n                    else if (valueA < valueB) return -1\n                    else return 0\n                  }\n                }}\n              />\n            )}\n          </AgGridReact>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}